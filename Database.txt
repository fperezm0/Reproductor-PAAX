CREATE TABLE Level_Users (
id INT IDENTITY (1,1) PRIMARY KEY,
name VARCHAR(80) ,
status int 
);


CREATE TABLE Users (
id INT IDENTITY (1,1) PRIMARY KEY,
username VARCHAR(45),
password VARCHAR(300) ,
name VARCHAR(45) ,
lastname VARCHAR(45) ,
addresses VARCHAR(45) ,
birthdate Date ,
email varchar(45) ,
phone varchar(45) ,
postalcode varchar(45) ,
id_level_usuario INT ,
status INT ,
CONSTRAINT fk_leveluser FOREIGN KEY (id_level_usuario) REFERENCES Level_Users(id)
);

CREATE TABLE Friends (
id INT IDENTITY (1,1) PRIMARY KEY,
id_Usu1 INT,
id_Usu2 INT,
status INT,
CONSTRAINT fk_users FOREIGN KEY (id_Usu1) REFERENCES Users(id),
CONSTRAINT fk_users2 FOREIGN KEY (id_Usu2) REFERENCES Users(id)
);


CREATE TABLE Genres (
id INT IDENTITY(1,1) PRIMARY KEY,
name VARCHAR(45) ,
description VARCHAR(200) ,
status INT 
);

CREATE TABLE Artists (
id INT IDENTITY (1,1) PRIMARY KEY,
name VARCHAR(45) ,
description VARCHAR(200) ,
photo VARCHAR(200) ,
id_genere INT ,
status INT,
CONSTRAINT fk_GenereInArtist FOREIGN KEY (id_genere) REFERENCES Genres(id)
);

CREATE TABLE Albums (
id INT IDENTITY (1,1) PRIMARY KEY,
name VARCHAR(45) ,
description VARCHAR(200),
photo VARCHAR(200) ,
id_artists INT ,
status INT,
CONSTRAINT fk_ArtistInAlbum FOREIGN KEY (id_artists) REFERENCES Artists(id)
);

CREATE TABLE Songs (
id INT IDENTITY (1,1) PRIMARY KEY,
name VARCHAR(45) ,
description VARCHAR(200) ,
duration VARCHAR(45) ,
rut VARCHAR(450) ,
collaborators VARCHAR(90),
id_albums INT,
status INT ,
CONSTRAINT fk_AlbumInSongs FOREIGN KEY (id_albums) REFERENCES Albums(id)
);


CREATE TABLE Follow (
id INT IDENTITY (1,1) PRIMARY KEY,
id_Usu1 INT ,
id_Artist INT ,
status INT ,
CONSTRAINT fk_FollowArtists FOREIGN KEY (id_Artist) REFERENCES Artists(id),
CONSTRAINT fk_FollowUser FOREIGN KEY (id_Usu1) REFERENCES Users(id)
);


CREATE  TABLE Event  (
id INT IDENTITY (1,1) PRIMARY KEY,
name VARCHAR(45) ,
id_artists INT ,
status INT ,
CONSTRAINT fk_ArtistInEvent FOREIGN KEY (id_artists) REFERENCES Artists(id)
);

CREATE Table EventAndUser  (
id INT IDENTITY (1,1) PRIMARY KEY,
id_User INT, 
id_Event INT,
CONSTRAINT fk_UserInEvent FOREIGN KEY (id_User) REFERENCES Users(id),
CONSTRAINT fk_EventInEventUser FOREIGN KEY (id_Event) REFERENCES Event(id)
);

CREATE  TABLE DetailEvent  (
id_Event INT,
description VARCHAR(200) ,
country VARCHAR(200) ,
city VARCHAR(45) ,
addresses VARCHAR(45) ,
dateevent Date ,
price decimal,
status INT ,
CONSTRAINT fk_detailevent FOREIGN KEY (id_Event) REFERENCES Event(id)
);




